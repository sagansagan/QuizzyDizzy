@page "/profile"
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager Navigation
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<h1>Profile</h1>

<h3>Your Quizzes</h3>

@if (quizzes == null)
{
    <p><em>Loading...</em></p>
}
else if (!quizzes.Any())
{
    <p>You have not created any quizzes yet.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Title</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var quiz in quizzes)
            {
                <tr>
                    <td>@quiz.Title</td>
                    <button @onclick="() => ViewResults(quiz.Id)" class="btn">See Statistics</button>
                </tr>
            }
        </tbody>
    </table>
}

<h3>Your Quiz Scores</h3>

@if (userScores == null)
{
    <p><em>Loading...</em></p>
}
else if (!userScores.Any())
{
    <p>You have not taken any quizzes yet.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Quiz Title</th>
                <th>Score</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var score in userScores)
            {
                <tr>
                    <td>@score.QuizTitle</td>
                    <td>@score.Score</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {

    private List<QuizDto> quizzes;
    private List<QuizResultDto> userScores;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity.IsAuthenticated)
        {
            Navigation.NavigateTo("Account/Login");
            return;
        }

        quizzes = await Http.GetFromJsonAsync<List<QuizDto>>("api/quiz/userquizzes");
        userScores = await Http.GetFromJsonAsync<List<QuizResultDto>>("api/quizresults/user-scores");
    }

    private void ViewResults(int quizId)
    {
        Navigation.NavigateTo($"/quiz-results/{quizId}");
    }

}
